<UserControl x:Class="UtilityTools.Modules.AutomateFlow.Views.AutomateFlowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"            
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:UtilityTools.Modules.AutomateFlow.Views"
             xmlns:behaviours="clr-namespace:UtilityTools.Controls.Behaviours;assembly=UtilityTools.Controls"
             xmlns:ac="clr-namespace:UtilityTools.Controls.Loading;assembly=UtilityTools.Controls"
             xmlns:errorList="clr-namespace:UtilityTools.Controls.Panels;assembly=UtilityTools.Controls"
             xmlns:converter="clr-namespace:UtilityTools.Controls.Converters;assembly=UtilityTools.Controls"
 xmlns:controls="clr-namespace:UtilityTools.Controls;assembly=UtilityTools.Controls"
 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
 xmlns:sys="clr-namespace:System;assembly=mscorlib"
 mc:Ignorable="d"              Name="automateFlowView"
 d:DesignHeight="850" d:DesignWidth="1800"  Loaded="UserControl_Loaded"
             >

    <UserControl.Resources>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converter:NBooleanToVisibilityConverter x:Key="NBooleanToVisibilityConverter"/>
        <sys:String x:Key="ModuelName">AutomateFlow</sys:String>
        <sys:String x:Key="MenuIcon">Resources\Images\flow_icon.png</sys:String>
        <sys:String x:Key="IsVisiable">true</sys:String>

        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        </Style>
        <Style x:Key="ItemTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="ItemSubTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ItemTitleStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="On: Banners, Sound"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="False">
                    <Setter Property="Text" Value="Off"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <DockPanel>
        <ac:AdornedControl Name="LoadingAdorner" IsAdornerVisible="{Binding IsWaiting}">
            <ac:AdornedControl.AdornerContent>
                <ac:LoadingWait></ac:LoadingWait>
            </ac:AdornedControl.AdornerContent>

            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150" />
                        <RowDefinition Height="9*" />
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <!-- List View -->
                    <Border BorderThickness="4,4,4,4" Margin="0,0,0,10"  Grid.Row="1" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="8*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ListView  x:Name="ListViewPage" SelectedItem="{Binding SelectedItem}" ItemContainerStyle="{DynamicResource ItemContentStyle}" ItemsSource="{Binding PageListView}" TextElement.FontSize="{DynamicResource ControlFontSize}" AlternationCount="2" >
                                <ListView.View>
                                    <GridView >
                                        <GridViewColumn Header="ID" DisplayMemberBinding="{Binding Id}" Width="30"></GridViewColumn>
                                        <GridViewColumn Header="DisplayName" DisplayMemberBinding="{Binding DisplayName}" Width="250"></GridViewColumn>


                                        <GridViewColumn Header="" Width="100">

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Margin="6,2,6,2">
                                                        <Button Command="{Binding DataContext.GetEditUrlCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl,AncestorLevel=1}}" CommandParameter="{Binding }">

                                                            <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                                                <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.WebResourceManager;component/Resources/Images/Publish.png"></Image>
                                                                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Edit</TextBlock>
                                                            </StackPanel>

                                                        </Button>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        
                                        <GridViewColumn Header="" Width="100">

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Margin="6,2,6,2">
                                                        <Button Command="{Binding DataContext.GetDependentComponentsCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl,AncestorLevel=1}}" CommandParameter="{Binding }">

                                                            <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                                                <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.WebResourceManager;component/Resources/Images/Publish.png"></Image>
                                                                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">D</TextBlock>
                                                            </StackPanel>

                                                        </Button>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="" Width="100">

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Margin="6,2,6,2">
                                                        <Button Command="{Binding DataContext.GetRequiredComponentsCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl,AncestorLevel=1}}" CommandParameter="{Binding }">

                                                            <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                                                <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.WebResourceManager;component/Resources/Images/Publish.png"></Image>
                                                                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">R</TextBlock>
                                                            </StackPanel>

                                                        </Button>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                    </GridView>
                                </ListView.View>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=ListViewPage, Path=SelectedItem}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding DoubleClickCommand}"  CommandParameter="{Binding ElementName=ListViewPage, Path=SelectedItem}"/>
                                    </i:EventTrigger>

                                </i:Interaction.Triggers>

                            </ListView>

                            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                            <Grid  Grid.Column="2">
                                <Grid Visibility="{Binding ShowFlowHistory,Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <DataGrid Grid.Row="1"  AutoGenerateColumns="False" Name="datagrid"
ItemsSource="{Binding FlowDetailItems}" IsReadOnly="True"
behaviours:DataGridColumnsBehavior.BindableColumns="{Binding ColumnCollection}"
            >
                                        <i:Interaction.Triggers>
                                            <!--<i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=datagrid, Path=SelectedItem}"/>
                                            </i:EventTrigger>-->

                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding GetHistoryDetailCommand}"  CommandParameter="{Binding ElementName=datagrid, Path=SelectedItem}"/>
                                            </i:EventTrigger>

                                        </i:Interaction.Triggers>
                                    </DataGrid>
                                </Grid>
                                <Grid Visibility="{Binding ShowFlowHistory,Converter={StaticResource NBooleanToVisibilityConverter}}" >
                                    <ListView  x:Name="TaskList"  ItemContainerStyle="{DynamicResource ItemContentStyle}"
        Visibility="{Binding ShowDependentComponents,Converter={StaticResource BooleanToVisibilityConverter}}"
         ItemsSource="{Binding DependencyMetadataInfos}" TextElement.FontSize="{DynamicResource ControlFontSize}"  >
                                        <ListView.View>
                                            <GridView >
                                                <!--<GridViewColumn Header="ID" DisplayMemberBinding="{Binding Id}" Width="30"></GridViewColumn>-->
                                                <GridViewColumn Header="D Name" DisplayMemberBinding="{Binding Name}" Width="250"></GridViewColumn>
                                                <!--<GridViewColumn Header="DisplayName" DisplayMemberBinding="{Binding DisplayName}" Width="250"></GridViewColumn>-->
                                                <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Type}" Width="100"></GridViewColumn>
                                                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" Width="100"></GridViewColumn>
                                                <GridViewColumn Header="" Width="100">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Margin="6,2,6,2">
                                                                <Button Content="Copy" 
                          CommandParameter="{Binding }"
                          Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl,AncestorLevel=1}}"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>

                                            </GridView>
                                        </ListView.View>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=ListViewPage, Path=SelectedItem}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ListView>

                                    <ListView  x:Name="TaskList1"  ItemContainerStyle="{DynamicResource ItemContentStyle}"
          Visibility="{Binding ShowDependentComponents,Converter={StaticResource NBooleanToVisibilityConverter}}"
ItemsSource="{Binding RequiredDependencyMetadataInfos}" TextElement.FontSize="{DynamicResource ControlFontSize}"  >
                                        <ListView.View>
                                            <GridView >
                                                <!--<GridViewColumn Header="ID" DisplayMemberBinding="{Binding Id}" Width="30"></GridViewColumn>-->
                                                <GridViewColumn Header="R Name" DisplayMemberBinding="{Binding Name}" Width="250"></GridViewColumn>
                                                <!--<GridViewColumn Header="DisplayName" DisplayMemberBinding="{Binding DisplayName}" Width="250"></GridViewColumn>-->
                                                <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Type}" Width="100"></GridViewColumn>
                                                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" Width="100"></GridViewColumn>
                                                <GridViewColumn Header="" Width="100">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Margin="6,2,6,2">
                                                                <Button Content="Copy" 
                 CommandParameter="{Binding }"
                 Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl,AncestorLevel=1}}"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>

                                            </GridView>
                                        </ListView.View>

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=ListViewPage, Path=SelectedItem}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </ListView>
                                </Grid>
                            </Grid>


                        </Grid>

                    </Border>
                    <!-- Data Fields and Tab Control  -->
                    <Grid Grid.Row="0" Margin="15,0,15,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7*"></ColumnDefinition>
                            <ColumnDefinition Width="3*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="60"/>
                                <!-- <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>
                         <ColumnDefinition Width="60"/>-->
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>


                            <!-- Row 1-->
                            <!--<Label Name="labelFile1" Height="30"  Grid.Column="0" Grid.Row="1" Grid.RowSpan="2">Location</Label>

                            <ComboBox Name="Location"  Grid.Column="1" Height="30" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="2"  
                           VerticalContentAlignment="Center"  
                           DisplayMemberPath="Name"  IsEditable="True"
                           SelectedValuePath="Value" 
                           Background="Yellow"
                           Text="{Binding Url}"
                           FontSize="{DynamicResource ControlFontSize}"
                           ItemsSource="{Binding HistoryItems}"
                           SelectedItem="{Binding CurrentDropdownItem}"
                           Validation.ErrorTemplate="{x:Null}">
                            </ComboBox>-->



                            <!-- Row 2 -->
                            <Label Name="labelFile2" Height="30"  Grid.Column="0" Grid.Row="2" Grid.RowSpan="2"  Margin="0 0 0 0">Filter</Label>
                            <TextBox Name="fileFilter" Text="{Binding NameFilter}"  Grid.Column="1" Grid.ColumnSpan="5" Height="30" Grid.RowSpan="2" Grid.Row="2" Margin="0,5,0,0"
                          VerticalContentAlignment="Center" InputMethod.IsInputMethodEnabled="False" />
                            <!--<TextBox Name="token" Text="{Binding Token}" Grid.Column="6" Background="Black" Foreground="Green" FontWeight="Bold"  Grid.Row="4"  Grid.ColumnSpan="4"/>-->
                            <Button Command="{Binding LoadCommand}"  Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="4"  Grid.RowSpan="1" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.WebResourceManager;component/Resources/Images/load.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Load</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button  Command="{Binding OpenNextHistoryCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="4" Grid.RowSpan="1"  Margin="10,0,0,0" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.MediaGet;component/Resources/Images/refresh.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Next</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button  Command="{Binding OpenConfigurationCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="6" Grid.ColumnSpan="2" Grid.Row="4" Grid.RowSpan="1"  Margin="10,0,0,0" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.AutomateFlow;component/Resources/Images/setting.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Configuration</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button  Command="{Binding OpenBrowerCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="8" Grid.ColumnSpan="2" Grid.Row="4" Grid.RowSpan="1"  Margin="10,0,0,0" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.AutomateFlow;component/Resources/Images/chrome.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">PowerPlatform</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button  Command="{Binding OpenFlowBrowerCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="10" Grid.ColumnSpan="2" Grid.Row="4" Grid.RowSpan="1"  Margin="10,0,0,0" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.AutomateFlow;component/Resources/Images/chrome.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">PowerAutomate</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button  Command="{Binding ClearFilter}" Height="30" CommandParameter="{Binding }"   Grid.Column="6" Grid.ColumnSpan="2" Grid.Row="2" Grid.RowSpan="2"  Margin="10,5,0,0" >
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                    <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.WebResourceManager;component/Resources/Images/Clear.png"></Image>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Clear</TextBlock>
                                </StackPanel>
                            </Button>
                            
                            
                            <!-- Row 4-->


                            <!--
                     <Button Content="Token" Command="{Binding FetchToken}" Grid.Column="10" Grid.ColumnSpan="2" Grid.Row="4"  Grid.RowSpan="1" Margin="5,0,0,0" />
                     <Button Content="Solution" Command="{Binding FetchSolutions}" CommandParameter="{Binding ElementName=token,Path=Text}" Grid.Column="12" Grid.ColumnSpan="2" Grid.Row="4"  Grid.RowSpan="1" Margin="5,0,0,0" />
                     <Button Content="Bulk Publish" Command="{Binding BulkPublish}" CommandParameter="{Binding ElementName=token,Path=Text}" Grid.Column="16" Grid.ColumnSpan="2" Grid.Row="3"  Grid.RowSpan="2" Margin="5,0,0,0" />
                     <Button Content="Changed" Command="{Binding FilterChangedFilesCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="12" Grid.ColumnSpan="2" Grid.Row="2" Grid.RowSpan="2"  Margin="0,10,0,0" />
                     <Button Content="Go" Command="{Binding MoveToBulkListCommand}" Height="30" CommandParameter="{Binding }"   Grid.Column="14" Grid.ColumnSpan="2" Grid.Row="2" Grid.RowSpan="2"  Margin="0,10,0,0" />-->

                            <!--solution-->
                            <!--<Label Name="solution" Height="30"  Grid.Column="9" Grid.Row="1" Grid.RowSpan="2">Solution</Label>

                     <ComboBox Name="solutiondropdown" Margin="10,0,0,0"  Grid.Column="10" Height="30" Grid.ColumnSpan="7" Grid.Row="1" Grid.RowSpan="2"  
                           VerticalContentAlignment="Center"  
                           DisplayMemberPath="Name"  
                           SelectedValuePath="Value" 
                           Background="Yellow"
                           FontSize="{DynamicResource ControlFontSize}"
                           ItemsSource="{Binding SolutionItems}"
                           SelectedItem="{Binding CurrentSolutionDropdownItem}"
                           Validation.ErrorTemplate="{x:Null}">
                     </ComboBox>-->
                        </Grid>
                        <Grid Grid.Column="1" >
                            <StackPanel Grid.Row="1" Height="50" Orientation="Horizontal">

                                <Grid Margin="30 0 0 0" HorizontalAlignment="Left" Grid.Row="1"  >
                                    <ToggleButton x:Name="ToggleSwitch2" FontFamily="Sergio UI" FontSize="16"
Style="{DynamicResource ToggleSwitchTopStyle}"
Content="Use Token" 
IsChecked="{Binding ShowTokenTextBox}" 
/>
                                    <TextBlock Margin="52 0 0 0" VerticalAlignment="Bottom" FontFamily="Sergio UI" FontSize="16">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                                <Setter Property="Text" Value="Off" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ToggleSwitch2, Path=IsChecked}" Value="True">
                                                        <Setter Property="Text" Value="On" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=ToggleSwitch2, Path=IsEnabled}" Value="false">
                                                        <Setter Property="Opacity" Value="0.2" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>


                                </Grid>

                                <Label VerticalAlignment="Center" Visibility="{Binding ShowTokenTextBox,Converter={StaticResource BooleanToVisibilityConverter} }">Dataverse</Label>
                                <TextBox Width="250" Text="{Binding D365AccessToken}" Visibility="{Binding ShowTokenTextBox,Converter={StaticResource BooleanToVisibilityConverter} }" Margin="10,5" ></TextBox>
                                <Label VerticalAlignment="Center" Visibility="{Binding ShowTokenTextBox,Converter={StaticResource BooleanToVisibilityConverter} }" >Service</Label>
                                <TextBox Width="250" Text="{Binding ServiceToken}" Visibility="{Binding ShowTokenTextBox,Converter={StaticResource BooleanToVisibilityConverter} }" Margin="10,5" ></TextBox>

                            </StackPanel>
                        </Grid>
                    </Grid>

                    <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch">

                    </GridSplitter>
                    <TabControl Name="tabControl1" Grid.Row="3" Margin="5,10,5,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <TabItem Header="Message">
                            <!--<TextBox Name="textBoxMessage" Text="{Binding TaskMessage}" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" BorderThickness="0" />-->
                            <errorList:ErrorListControl x:Name="errorList" Margin="5" Items="{Binding LogItems}"  />
                        </TabItem>
                        <TabItem Header="Throwable">
                            <TextBox Name="textBoxThrowable" TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" BorderThickness="0"/>
                        </TabItem>
                    </TabControl>

                    <Popup IsOpen="{Binding CustomColumnViewEnable}" 
   PlacementTarget="{Binding ElementName=flowHistoryWidgeView}"
   Width="600"
   Height="400"
   Placement="Center"
   StaysOpen="False"
   AllowsTransparency="True" PopupAnimation="Slide" 
   >

                        <Border Background="{DynamicResource WindowBackgroundBrush}"  
BorderBrush="Black"
BorderThickness="1"
Margin="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>

                                <WrapPanel Grid.Row="0"
    Height="16"
    HorizontalAlignment="Right"
    VerticalAlignment="Top"
    Orientation="Horizontal" >
                                    <Button>
                                        <Path
        Width="12"
        Height="12"
        Data="m12.65194,6.64088l-2.65193,2.65194l-2.65195,-2.65194c-0.19527,-0.19528 -0.51189,-0.19528 -0.70718,0c-0.19529,0.19528 -0.19528,0.5119 0,0.70718l2.65194,2.65195l-2.65194,2.65193c-0.19528,0.19528 -0.19528,0.51191 0,0.70719c0.19528,0.19528 0.5119,0.19528 0.70718,0l2.65195,-2.65194l2.65193,2.65194c0.19528,0.19528 0.5119,0.19528 0.70719,0c0.19528,-0.19528 0.19528,-0.51191 0,-0.70719l-2.65194,-2.65193l2.65194,-2.65195c0.19528,-0.19527 0.19528,-0.51189 0,-0.70718c-0.19528,-0.19528 -0.5119,-0.19528 -0.70719,0z"
        Fill="Black"
        Stretch="Fill"
        UseLayoutRounding="True" />
                                    </Button>

                                </WrapPanel>

                                <local:CustomColumnsView  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" />
                            </Grid>
                        </Border>

                    </Popup>
                    
                </Grid>
            </Grid>
        </ac:AdornedControl>
    </DockPanel>
</UserControl>
