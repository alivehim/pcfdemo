<UserControl x:Class="UtilityTools.Modules.Canvas.Views.TexttoSpeechWidgetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converter="clr-namespace:UtilityTools.Controls.Converters;assembly=UtilityTools.Controls"
             xmlns:prism="http://prismlibrary.com/"    
             Name="TTSViewControl"
             xmlns:local="clr-namespace:UtilityTools.Modules.Canvas.Views"
             xmlns:controls="clr-namespace:UtilityTools.Controls;assembly=UtilityTools.Controls"
             xmlns:ac="clr-namespace:UtilityTools.Controls.Loading;assembly=UtilityTools.Controls"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <converter:TextToVisiablilityConverter x:Key="TextToVisiablilityConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converter:NBooleanToVisibilityConverter x:Key="NBooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <DockPanel >
        <ac:AdornedControl Name="LoadingAdorner" IsAdornerVisible="{Binding IsWaiting}">
            <ac:AdornedControl.AdornerContent>
                <ac:LoadingWait></ac:LoadingWait>
            </ac:AdornedControl.AdornerContent>
            <Border BorderBrush="Black" BorderThickness="1,1,1,1">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"></ColumnDefinition>
                        <ColumnDefinition Width="100"></ColumnDefinition>
                        <ColumnDefinition Width="5*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid  Margin="10,0,0,10" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                                <TextBlock VerticalAlignment="Center" Margin="0,0,10,0">Title</TextBlock>
                                <TextBox Width="500" Text="{Binding Title}" BorderThickness="0,0,0,1" Background="{DynamicResource WindowBackgroundBrush}" ></TextBox>
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="1">
                            <TextBlock Margin="5,2" Text="Text..." FontSize="50"
                   Foreground="LightSteelBlue" Visibility="{Binding ElementName=content, Path=Text, Converter={StaticResource TextToVisiablilityConverter}}"  IsHitTestVisible="False"/>

                            <TextBox Name="content" TextWrapping="Wrap" AcceptsReturn="True" BorderBrush="Transparent" 
                     HorizontalScrollBarVisibility="Visible" Background="Transparent" 
                     Text="{Binding Text,Mode=TwoWay}" FontSize="30" FontWeight="Bold">
                                <TextBox.Resources>
                                    <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.3" Stretch="None" AlignmentX="Left">
                                        <VisualBrush.Visual>
                                            <TextBlock FontStyle="Italic" Text="请输入用户名"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </TextBox.Resources>
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>

                    </Grid>
                    <Grid Grid.Column="1">



                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">

                            <Button Margin="0,10,0,10" Content="Clear" HorizontalAlignment="Center" Command="{Binding ClearCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                            <Button Margin="0,10,0,10" Content="Play" HorizontalAlignment="Center" Command="{Binding PlayCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                            <Button Margin="0,10,0,10" Content="Save" HorizontalAlignment="Center" Command="{Binding SaveCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                            <Button Margin="0,10,0,10" Content="Test" HorizontalAlignment="Center" Command="{Binding TestCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                            <StackPanel Grid.Column="11" Grid.ColumnSpan="2" Grid.Row="4" Margin="5,0,0,0" Grid.RowSpan="1" Height="30" VerticalAlignment="Bottom" >
                                <ToggleButton Name="btnSearch" Height="30"  >

                                    <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                        <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.MediaGet;component/Resources/Images/search.png"></Image>
                                        <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Load</TextBlock>
                                    </StackPanel>

                                </ToggleButton>

                                <Button HorizontalAlignment="Left" Width="129" Margin="10,10,0,0">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="theSearchTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" AutoReverse="True" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                                <Popup IsOpen="{Binding ElementName=btnSearch,Path=IsChecked}" 
                                         PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                           Placement="Top"
                           StaysOpen="False"  MaxHeight="480" Width="660" Height="480" 
                           AllowsTransparency="True" PopupAnimation="Slide" 
                           >

                                    <Border Background="{DynamicResource WindowBackgroundBrush}"  Width="640" Height="460" 
                        BorderBrush="Black"
                        BorderThickness="1"
                        Margin="5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="18"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <WrapPanel Grid.Row="0"
                            Height="16"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal" >
                                                <Button>
                                                    <Path
                                Width="12"
                                Height="12"
                                Data="m12.65194,6.64088l-2.65193,2.65194l-2.65195,-2.65194c-0.19527,-0.19528 -0.51189,-0.19528 -0.70718,0c-0.19529,0.19528 -0.19528,0.5119 0,0.70718l2.65194,2.65195l-2.65194,2.65193c-0.19528,0.19528 -0.19528,0.51191 0,0.70719c0.19528,0.19528 0.5119,0.19528 0.70718,0l2.65195,-2.65194l2.65193,2.65194c0.19528,0.19528 0.5119,0.19528 0.70719,0c0.19528,-0.19528 0.19528,-0.51191 0,-0.70719l-2.65194,-2.65193l2.65194,-2.65195c0.19528,-0.19527 0.19528,-0.51189 0,-0.70718c-0.19528,-0.19528 -0.5119,-0.19528 -0.70719,0z"
                                Fill="Black"
                                Stretch="Fill"
                                UseLayoutRounding="True" />
                                                </Button>

                                            </WrapPanel>

                                            <Grid Grid.Row="1" Background="{DynamicResource WindowBackgroundBrush}" >

                                                <!--<Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="30"></RowDefinition>
                                                </Grid.RowDefinitions>-->
                                                
                                                <local:OnenoteView />
                                                
                                               
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </StackPanel>


                            <StackPanel Margin="0,10,0,10" Height="30" VerticalAlignment="Bottom" >
                                <ToggleButton Name="btnOpenSection" Height="30"  >

                                    <StackPanel  Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                        <Image Margin="2 0"  Width="18" Height="18" Source="/UtilityTools.Modules.MediaGet;component/Resources/Images/search.png"></Image>
                                        <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">OpenSection</TextBlock>
                                    </StackPanel>

                                </ToggleButton>

                                <Button HorizontalAlignment="Left" Width="129" Margin="10,10,0,0">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="theSearchTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" AutoReverse="True" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                                
                                
                                <Popup IsOpen="{Binding ElementName=btnOpenSection,Path=IsChecked}" 
                                         PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                           Placement="Top"
                           StaysOpen="False"  MaxHeight="480" Width="660" Height="480" 
                           AllowsTransparency="True" PopupAnimation="Slide" 
                           >

                                    <Border Background="{DynamicResource WindowBackgroundBrush}"  Width="640" Height="460" 
                        BorderBrush="Black"
                        BorderThickness="1"
                        Margin="5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="18"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <WrapPanel Grid.Row="0"
                            Height="16"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal" >
                                                <Button>
                                                    <Path
                                Width="12"
                                Height="12"
                                Data="m12.65194,6.64088l-2.65193,2.65194l-2.65195,-2.65194c-0.19527,-0.19528 -0.51189,-0.19528 -0.70718,0c-0.19529,0.19528 -0.19528,0.5119 0,0.70718l2.65194,2.65195l-2.65194,2.65193c-0.19528,0.19528 -0.19528,0.51191 0,0.70719c0.19528,0.19528 0.5119,0.19528 0.70718,0l2.65195,-2.65194l2.65193,2.65194c0.19528,0.19528 0.5119,0.19528 0.70719,0c0.19528,-0.19528 0.19528,-0.51191 0,-0.70719l-2.65194,-2.65193l2.65194,-2.65195c0.19528,-0.19527 0.19528,-0.51189 0,-0.70718c-0.19528,-0.19528 -0.5119,-0.19528 -0.70719,0z"
                                Fill="Black"
                                Stretch="Fill"
                                UseLayoutRounding="True" />
                                                </Button>

                                            </WrapPanel>

                                            <Grid Grid.Row="1" Background="{DynamicResource WindowBackgroundBrush}" >

                                                <!--<Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="30"></RowDefinition>
                                                </Grid.RowDefinitions>-->

                                                <local:OneNoteSectionView />


                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </StackPanel>
                            

                            <Button Margin="0,10,0,10" Content="TTSMaker" HorizontalAlignment="Center" Command="{Binding OpenTTSMakerCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                        <!--<Button Margin="0,10,0,10" Content="Phrase" HorizontalAlignment="Center" Command="{Binding GetPhraseCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                        <Button Margin="0,10,0,10" Content="Example" HorizontalAlignment="Center" Command="{Binding GetExampleCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>

                        <Button Margin="0,10,0,10" Content="Baidu" HorizontalAlignment="Center" Command="{Binding OpenBaiduCommand}"
                    VerticalAlignment="Center" HorizontalContentAlignment="Center"  Width="80" Height="30" 
                    VerticalContentAlignment="Center" ></Button>-->

                        </StackPanel>

                    </Grid>
                    <Grid Grid.Column="2"  Margin="0,0,10,10" >

                        <controls:HtmlRenderControl RawText="{Binding RawText,Mode=TwoWay}"  x:Name="Header" Foreground="#E0FFFF"/>

                    </Grid>
                </Grid>
            </Border>
        </ac:AdornedControl>
    </DockPanel>

</UserControl>
