<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:properties="clr-namespace:UtilityTools.Controls.Ribbon.Properties"
                    xmlns:ui="clr-namespace:UtilityTools.Controls.Ribbon.UI"
                    mc:Ignorable="d">

    <Style TargetType="ui:RibbonButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="FontSize" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=WindowMediumFontSize}}" />
        <Setter Property="Padding" Value="4,0,4,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="{x:Static ui:RibbonCommands.AddQuickAccess}"
                              CommandParameter="{Binding PlacementTarget,
                                                         RelativeSource={RelativeSource FindAncestor,
                                                                                        AncestorType=ContextMenu,
                                                                                        AncestorLevel=1}}"
                              CommandTarget="{Binding PlacementTarget,
                                                      RelativeSource={RelativeSource FindAncestor,
                                                                                     AncestorType={x:Type ContextMenu},
                                                                                     AncestorLevel=1}}"
                              Header="{x:Static properties:Resources.AddQuickAccessCommandTooltip}" />
                    <Separator />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxWidth" Value="100" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ui:RibbonWindow, AncestorLevel=1}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock RenderOptions.ClearTypeHint="Enabled"
                               Text="{Binding}"
                               TextTrimming="None"
                               TextWrapping="WrapWithOverflow" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:RibbonButton">
                    <Border Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="Fant"
                                   Source="{TemplateBinding ImageSource}"
                                   Stretch="Uniform" />
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=DarkTextBrush}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=ui:RibbonWindow, ResourceId=DarkTextBrush}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding AccentBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=ui:RibbonWindow, AncestorLevel=1}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding HoverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
